-- Creating the teaches table
CREATE TABLE teaches (
    T_ID INT,
    course_id INT,
    sec_id INT,
    semester VARCHAR(10),
    year INT,
    PRIMARY KEY (T_ID, course_id, sec_id)
);

-- Creating the student table
CREATE TABLE student (
    S_ID INT PRIMARY KEY,
    name VARCHAR(100),
    dept_name VARCHAR(100),
    tot_cred INT
);

-- Creating the instructor table
CREATE TABLE instructor (
    T_ID INT PRIMARY KEY,
    name VARCHAR(100),
    dept_name VARCHAR(100),
    salary DECIMAL(10, 2)
);

-- Creating the course table
CREATE TABLE course (
    course_id INT PRIMARY KEY,
    title VARCHAR(100),
    dept_name VARCHAR(100),
    credits INT
);

-- Inserting sample data into student table
INSERT INTO student (S_ID, name, dept_name, tot_cred) VALUES
(1, 'Alice', 'Computer', 120),
(2, 'Bob', 'Mathematics', 80),
(3, 'Charlie', 'Computer', 100),
(4, 'David', 'Electrical', 95),
(5, 'Eve', 'Computer', 110);

-- Inserting sample data into instructor table
INSERT INTO instructor (T_ID, name, dept_name, salary) VALUES
(1, 'Amol', 'Computer', 45000.00),
(2, 'Amit', 'Computer', 42000.00),
(3, 'John', 'Electrical', 35000.00),
(4, 'Mary', 'Computer', 48000.00),
(5, 'Sarah', 'Mathematics', 40000.00);

-- Inserting sample data into course table
INSERT INTO course (course_id, title, dept_name, credits) VALUES
(1, 'DBMS', 'Computer', 4),
(2, 'Calculus', 'Mathematics', 3),
(3, 'Electronics', 'Electrical', 3),
(4, 'Data Structures', 'Computer', 4),
(5, 'Linear Algebra', 'Mathematics', 3);

-- Inserting sample data into teaches table
INSERT INTO teaches (T_ID, course_id, sec_id, semester, year) VALUES
(1, 1, 1, 'Fall', 2023),
(2, 2, 1, 'Spring', 2023),
(3, 3, 1, 'Fall', 2023),
(4, 4, 1, 'Spring', 2023),
(5, 5, 1, 'Fall', 2023);

-- Query i: Find the names of the instructor in the university who have taught the courses semester wise.
SELECT i.name, c.title, t.semester, t.year
FROM instructor i
JOIN teaches t ON i.T_ID = t.T_ID
JOIN course c ON t.course_id = c.course_id
ORDER BY t.semester, t.year;

-- Query ii: Create View on single table which retrieves student details.
CREATE VIEW student_details AS
SELECT S_ID, name, dept_name, tot_cred
FROM student;

-- Query iii: Rename the column of table student from dept_name to department_name
ALTER TABLE student CHANGE dept_name department_name VARCHAR(100);

-- Query iv: Delete student name whose department is NULL
DELETE FROM student WHERE department_name IS NULL;
